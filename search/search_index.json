{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"User Documentation","text":""},{"location":"#description","title":"Description","text":"<p>EPDataLog is a program designed to facilitate data logging from a Microgreen EnergyPak Battery.</p> <ul> <li>Supported BMS: Mewyeah, Heyo Daly, Orion</li> <li>Supported Operating Systems: Windows, MacOS (Intel and Apple Silicon)</li> </ul>"},{"location":"#installation","title":"Installation","text":"<ol> <li>On Windows, install the CH340 Driver (Ctrl+Click to open in a new tab). This step can be ignored if on MacOS.</li> <li>Navigate to the release page (Ctrl+Click to open in a new tab).</li> <li>Important: Check the BMS version of the EnergyPak. It should be either Mewyeah, Daly or Orion. The BMS version can be found on the product label of the EnergyPak. </li> <li>Download the corresponding zip file for the operating system and BMS version.</li> <li>Unzip the downloaded file. This step can be ignored if on MacOS.</li> </ol>"},{"location":"#usage","title":"Usage","text":"<ol> <li>Ensure the EnergyPak is ON and connected to the computer via the RS232-USB cable. If using a 12kWh EnergyPak, ensure the display is turned OFF.</li> <li>Open the unzipped folder and double-click on the <code>EPDataLog_Mewyeah_Windows_v1-2.exe</code> or <code>EPDataLog_Daly_Windows_v1-2.exe</code> or <code>EPDataLog_Orion_Windows_v1-2.exe</code> file. </li> <li>A command prompt window will open. Follow the instructions highlighted in red. </li> <li>The first question will ask if the default settings should be used for running the program. This is recommended for most users. Press <code>y</code> and <code>Enter</code> to continue, then skip to step 7. If custom settings are preferred, type <code>n</code> and press <code>Enter</code>. </li> <li>If custom settings were chosen, a prompt will appear to enter the COM port number. This is the port number of the RS232-USB cable. The port number can be found in the Device Manager. Alternatively, press <code>Enter</code> to use auto-port-detection. </li> <li>If custom settings were chosen, a prompt will appear to enter the data logging interval. This is the interval between each data logging query. The default value is 2000ms. If unsure of what value to enter, press <code>Enter</code> to use the default value. </li> <li>If this screen appears, the program is running successfully. DO NOT close the command prompt window. </li> <li>If performing the data logging for a long time (i.e. overnight), ensure that your laptop does not go to sleep and that it has enough battery.</li> <li>To stop the program, you can close the command prompt window or press <code>Ctrl+C</code>. The program will automatically save the data to a CSV file and exit. </li> </ol>"},{"location":"#common-errors","title":"Common Errors","text":"<ul> <li>On MacOS, you might see this error message when trying to run the app:  </li> </ul> <p>To fix this, instead of double clicking the app, right click on the app and select \"Open\". Then, click \"Open\" on the prompt that appears.</p>"},{"location":"#sample-output","title":"Sample Output","text":"<p>Refer to SampleLog.csv (Ctrl+Click to open in a new tab) for an example of the output CSV file.</p>"},{"location":"developer_documentation/","title":"Developer Documentation","text":""},{"location":"developer_documentation/#introduction","title":"Introduction","text":"<p>EPDataLog is a program designed to facilitate data logging from a Microgreen EnergyPak Battery. At the time of developement, the program supports the following BMS and operating system combinations:</p> <ul> <li>Supported BMS: Mewyeah, Heyo Daly (Also referred to as Daly), Orion</li> <li>Supported Operating Systems: Windows, MacOS</li> </ul>"},{"location":"developer_documentation/#features","title":"Features","text":"<ul> <li>Auto-port detection: If the user chose not to customize the settings, the program will automatically detect the port number of the RS232-USB cable. This is done by looping from 1-20 and sending a query to each port, checking if the response is correct.</li> <li>Customized Prarmeters: After the program is run, the user can choose to customize the parameters of the data logging. This includes the port number and data logging interval (in ms).</li> </ul> <p>Notes:  - EPDataLog does not support Linux - Mewyeah is now a deprecated version of BMS. We have a Mewyeah version to facilaite data logging for older EnergyPaks. All EnergyPaks in the future will be using Heyo Daly BMS.</p>"},{"location":"developer_documentation/#file-structure","title":"File Structure","text":"<p>This is the general file structure of the project: <pre><code>EPDataLog\n\u251c\u2500\u2500 common\n\u2502   \u251c\u2500\u2500 macos\n\u2502   \u2514\u2500\u2500 windows\n\u251c\u2500\u2500 Daly\n\u2502   \u251c\u2500\u2500 common\n\u2502   \u251c\u2500\u2500 macos\n\u2502   \u2514\u2500\u2500 windows\n\u251c\u2500\u2500 Orion\n\u2502   \u251c\u2500\u2500 common\n\u2502   \u251c\u2500\u2500 macos\n\u2502   \u2514\u2500\u2500 windows\n\u2514\u2500\u2500 Mewyeah\n    \u251c\u2500\u2500 common\n    \u251c\u2500\u2500 macos\n    \u2514\u2500\u2500 windows\n</code></pre></p> <p>In the project root (EPDataLog), we have three directories, Daly, Mewyeah, and common. Daly, Orion, and Mewyeah contain code specific to the respective BMS. Common contains code that is shared between the two BMS versions.</p> <p>In EPDataLog/common/, we have two directories, macos and windows. These directories contain code that is shared between the three BMS versions. Specifically, each OS directory contains code for:</p> <ul> <li>connecting to the BMS (MacOS uses serial port communication, Windows uses COM Port communication)</li> <li>outputting data to a CSV file (MacOS requires extra configuration to get the correct file path)</li> </ul> <p>In EPDataLog/common/, there is also a file named readProgramParams.c. This file contains code for reading command line arguments. This file is shared between all 4 program versions.</p> <p>In EPDataLog/common/Daly, EPDataLog/common/Orion, and EPDataLog/common/Mewyeah, we have three directories, common, macos, windows.</p>"},{"location":"developer_documentation/#common","title":"Common","text":"<p>/common contains code that is shared between the two OS versions. Specifically, the common directory contains the code for getting and parsing data from the BMS. The code is the same for both BMS versions, with the exception of reading and writing data to the BMS, in which we use preprocessor conditional directives to include the correct code for each OS version.</p>"},{"location":"developer_documentation/#macos-and-windows","title":"MacOS and Windows","text":"<p>/macos and /windows contains code specific to MacOS and Windows respectively. Specifically, each directory contains the main.c file where the program starts.</p>"},{"location":"developer_documentation/#useful-resources","title":"Useful Resources","text":"<p>For instructions on compiling and releasing the code, refer to Project_Build_And_Release_Instructions.md</p> <p>If changes need to be made to the BMS communication code, refer to the company's internal documentation regarding each BMS.</p> <p>Refer to SampleLog.csv for an example of the output CSV file.</p> <p>Refer to Alarm Codes for a list of alarm codes and their meanings.</p> <p>Mewyeah Alarm Codes</p> <p>Daly Alarm Codes</p>"},{"location":"developer_documentation/#notes","title":"Notes","text":"<ul> <li> <p>Whenever a zip file is created for a release, Make sure the README.md file is bundled in there. Otherwise, the user won't know how to use the program if they can't access the README on github.</p> </li> <li> <p>For some reason, when the Mac execuatables are zipped on windows, they cannot be opened properly on Mac. Thus, make sure to zip the Mac executables on Mac.</p> </li> </ul>"},{"location":"developer_documentation/#running-the-mkdocs-site-locally","title":"Running the MkDocs Site Locally","text":"<p>MkDocs was for the documentation site. Github (with github actions and pages) has been set up to automatically build and deploy the site whenever a commit is pushed to the main branch.</p> <p>The python venv folder in added .gitignore since it's very large. As a result, running the Mkdocs site locally requires some extra steps. Note that it is not necessary to setup the venv if you don't want to run it locally.</p> <p>If you would like to run the MkDocs site locally on your machine, follow these steps:</p> <ol> <li> <p>Ensure you have Python installed on your machine. If not, download and install Python from the official website.</p> </li> <li> <p>Clone the repository to your local machine:     <pre><code>git clone https://github.com/MicrogreenSolarCorp/EPDataLog.git\ncd EPDataLog\n</code></pre></p> </li> <li> <p>Create a virtual environment in the project directory:     <pre><code>python3 -m venv .venv\n</code></pre></p> </li> <li> <p>Activate the virtual environment:</p> <ul> <li>On Windows:     <pre><code>.\\.venv\\Scripts\\activate\n</code></pre></li> <li>On MacOS or Unix:     <pre><code>source .venv/bin/activate\n</code></pre></li> </ul> </li> <li> <p>Install MkDocs and any other required dependencies within the virtual environment:     <pre><code>pip install mkdocs-material\n</code></pre></p> </li> <li> <p>Run the MkDocs server locally:     <pre><code>mkdocs serve\n</code></pre></p> </li> </ol> <p>Now, you should be able to access the MkDocs site locally at <code>http://127.0.0.1:8000</code>. Any changes you make to the documentation files should be automatically reflected on the local site.</p>"},{"location":"project_build_and_release_instructions/","title":"Project Build and Release Instructions","text":"<p>Note: v1-1 =&gt; v1.1, the period is removed because the period leads to issues with the file extionsion</p>"},{"location":"project_build_and_release_instructions/#compilation-instructions","title":"Compilation Instructions","text":"<p>The following commands will compile, and zip the executable + README into a zip file, located in the same directory as main.c.</p>"},{"location":"project_build_and_release_instructions/#for-mewyeah-windows","title":"For Mewyeah Windows:","text":"<pre><code>make windows_mewyeah VERSION=vX-X\n</code></pre>"},{"location":"project_build_and_release_instructions/#for-mewyeah-macos","title":"For Mewyeah MacOS:","text":"<pre><code>make mac_mewyeah VERSION=vX-X\n</code></pre>"},{"location":"project_build_and_release_instructions/#for-daly-windows","title":"For Daly Windows:","text":"<pre><code>make windows_daly VERSION=vX-X\n</code></pre>"},{"location":"project_build_and_release_instructions/#for-daly-macos","title":"For Daly MacOS:","text":"<pre><code>make mac_daly VERSION=vX-X\n</code></pre>"},{"location":"project_build_and_release_instructions/#for-orion-windows","title":"For Orion Windows:","text":"<pre><code>make windows_orion VERSION=vX-X\n</code></pre>"},{"location":"project_build_and_release_instructions/#for-orion-macos","title":"For Orion MacOS:","text":"<pre><code>make mac_orion VERSION=vX-X\n</code></pre>"},{"location":"project_build_and_release_instructions/#to-delete-all-executables-and-zip-files","title":"To delete all executables and zip files:","text":"<p><pre><code>make mac_clean\n</code></pre> or <pre><code>make windows_clean\n</code></pre></p>"},{"location":"project_build_and_release_instructions/#cleanup-commands","title":"Cleanup Commands","text":""},{"location":"project_build_and_release_instructions/#to-delete-all-windows-executables-and-thier-zip-folders","title":"To delete all windows executables and thier zip folders:","text":"<pre><code>make windows_clean\n</code></pre>"},{"location":"project_build_and_release_instructions/#to-delete-all-macos-executables-and-thier-zip-folders","title":"To delete all macos executables and thier zip folders:","text":"<pre><code>make mac_clean\n</code></pre>"},{"location":"project_build_and_release_instructions/#to-delete-all-csv-files-that-may-have-been-created-when-testingrunning-the-program-will-not-delete-samplelogcsv","title":"To delete all csv files that may have been created when testing/running the program (will not delete SampleLog.csv):","text":"<pre><code>make clean_csv\n</code></pre>"},{"location":"project_build_and_release_instructions/#version-tagging-and-pushing","title":"Version Tagging and Pushing","text":"<pre><code>git tag -a EPDataLog_vX.X -m \"Released vX.X for all 6 program variants\"\ngit push origin EPDataLog_vX.X\n</code></pre>"},{"location":"project_build_and_release_instructions/#important-notes","title":"Important Notes","text":"<ul> <li>For some reason, when the Mac execuatables are zipped on windows, they cannot be opened properly on Mac. Thus, make sure to zip the Mac executables on Mac.</li> <li>The MacOS versions of the software will work for both x86 and arm based Macs. If curious, feel free look in the make file to see how this is achieved.</li> <li>Orion BMS sends strings instead of byte arrays, but since they're both sent as unsigned char *, there shouldn't be any issues.</li> <li>Orion BMS requires EVEN parity when setting up the COM port connection with the BMS. This is done in the connection.c file.</li> <li>Alarm codes are not displayed with Orion BMS.</li> </ul>"}]}